{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","ipfsClient","host","port","protocol","props","_this","Object","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","call","getEvidencesOfCase","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","mark","_callee4","caseId","contextCase","j","evd","wrap","_context4","prev","next","console","log","state","getCaseId","cases","totalEvidences","securex","methods","getEvidenceById","sent","setState","evidences","concat","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","stop","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","uploadFile","add","error","loading","evidenceDetails","registerEvidence","description","hash","createdDate","send","from","account","on","reload","registerCase","caseDetails","courtId","caseDescription","startDateTime","newCaseId","length","alert","handleCaseInputChange","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","name","value","handleEvidenceInputChange","handleEvidenceCaseInput","uploadedImage","bind","_home_shiyas_Documents_shieldX_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","net","getId","networkAdress","Contract","Securex","abi","totalCases","caseCount","i","aCase","address","tipAmount","_this2","tipEvidenceOwner","_this3","react__WEBPACK_IMPORTED_MODULE_12___default","_Navbar__WEBPACK_IMPORTED_MODULE_16__","id","className","role","style","maxWidth","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","Header","as","Body","Title","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","onSubmit","Group","Label","Control","type","placeholder","onChange","rows","react_bootstrap__WEBPACK_IMPORTED_MODULE_15__","variant","map","evidence","key","src","onClick","utils","toWei","Component","Navbar","react__WEBPACK_IMPORTED_MODULE_5___default","href","rel","width","height","Identicon","toString"],"mappings":"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","file":"static/js/main.a56d7eff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Securex from '../artifacts/src/contracts/Securex.sol/Securex.json'\nimport React, { Component } from 'react';\nimport { Card, Button, Form, } from 'react-bootstrap';\n\nimport Navbar from './Navbar'\n\nimport Web3 from 'web3';\nimport './App.css';\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        // Load account\n        const accounts = await web3.eth.getAccounts()\n\n        this.setState({ account: accounts[0] })\n        // Network ID\n        const networkId = await web3.eth.net.getId()\n       // const networkData = Securex.networks[networkId]\n        const networkAdress = \"0x83749167D4B8D7cAb243BD45875EA1fA2b2726a2\"\n        if (networkAdress) {\n            const securex = new web3.eth.Contract(Securex.abi, networkAdress)\n            this.setState({ securex })\n            const caseCount = await securex.methods.totalCases().call()\n            this.setState({ caseCount })\n            console.log(caseCount)\n            for (var i = 1; i <= caseCount; i++) {\n                const aCase = await securex.methods.cases(i).call()\n                this.setState({\n                    cases: [...this.state.cases, aCase]\n                })\n            }\n\n\n\n            console.log(this.state.cases)\n\n\n            this.setState({ loading: false })\n        } else {\n            window.alert('Securex contract not deployed to detected network.')\n        }\n    }\n    getEvidencesOfCase = async () => {\n        console.log('Get Evidences Called')\n        const caseId = this.state.getCaseId\n        const contextCase = this.state.cases[caseId - 1];\n\n\n        for (var j = 1; j <= contextCase.totalEvidences; j++) {\n            let evd = await this.state.securex.methods.getEvidenceById(caseId, j).call()\n            this.setState({\n                evidences: [...this.state.evidences, evd]\n            })\n        }\n        console.log(this.state.evidences)\n    }\n\n    captureFile = event => {\n\n        event.preventDefault()\n        const file = event.target.files[0]\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n\n        reader.onloadend = () => {\n            this.setState({ buffer: Buffer(reader.result) })\n            console.log('buffer', this.state.buffer)\n        }\n    }\n\n    uploadFile = () => {\n\n        console.log(\"Submitting file to ipfs...\")\n\n        //adding file to the IPFS\n        ipfs.add(this.state.buffer, (error, result) => {\n            console.log('Ipfs result', result)\n            if (error) {\n                console.error(error)\n                return\n            }\n\n            this.setState({ loading: true, })\n\n            console.log(this.state.evidenceDetails)\n\n            this.state.securex.methods.registerEvidence(this.state.evidenceDetails.caseId,\n                this.state.evidenceDetails.description,\n                result[0].hash,\n\n                this.state.evidenceDetails.createdDate).send({ from: this.state.account }).on('transactionHash', (hash) => {\n                   window.location.reload()\n                    this.setState({ loading: false })\n                })\n        })\n    }\n    registerCase = () => {\n        console.log(\"Registering Case...\")\n\n        console.log(this.state.caseDetails)\n\n        this.setState({ loading: true })\n\n        this.state.securex.methods.registerCase(this.state.caseDetails.courtId,\n\n            this.state.caseDetails.caseDescription,\n            this.state.caseDetails.startDateTime).send({ from: this.state.account }).on('transactionHash', (hash) => {\n                let newCaseId = this.state.cases.length + 1\n                window.alert(\"Successfully registered with Case ID: \" + newCaseId)\n                this.setState({ loading: false })\n            })\n\n    }\n\n    handleCaseInputChange = (event) => {\n        this.setState({\n            caseDetails: {\n                ...this.state.caseDetails,\n                [event.target.name]: event.target.value\n            }\n        });\n    }\n    handleEvidenceInputChange = (event) => {\n        this.setState({\n            evidenceDetails: {\n                ...this.state.evidenceDetails,\n                [event.target.name]: event.target.value\n            }\n        });\n    }\n    handleEvidenceCaseInput = (event) => {\n        this.setState({\n            getCaseId: event.target.value\n\n        });\n    }\n    tipEvidenceOwner(address, tipAmount) {\n        this.setState({ loading: true })\n        this.state.securex.methods.tipEvidenceOwner(address).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n            this.setState({ loading: false })\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: '',\n            securex: null,\n            loading: true,\n            evidenceDetails: {\n                caseId: '',\n                description: '',\n\n                createdDate: ''\n            },\n            caseDetails: {\n                courtId: '',\n\n                caseDescription: '',\n                startDateTime: ''\n            },\n            uploadedImage: '',\n            cases: [],\n            evidences: [],\n            getCaseId: ''\n        }\n\n        this.uploadFile = this.uploadFile.bind(this)\n        this.captureFile = this.captureFile.bind(this)\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Navbar account={this.state.account} />\n                {this.state.loading\n                    ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n                    :\n                    <div>\n\n\n                        <div className=\"container-fluid mt-5\">\n                            <div className=\"row\">\n                                <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n                                    <div className=\"content mr-auto ml-auto\">\n                                        <p>&nbsp;</p>\n                                        <Card>\n                                            <Card.Header as=\"h2\">Register Case</Card.Header>\n                                            <Card.Body>\n                                                <Card.Title>Provide the below details to register a case.</Card.Title>\n\n                                                <Form onSubmit={(event) => {\n                                                    console.log('Form Submitted')\n                                                    event.preventDefault()\n                                                    this.registerCase();\n\n                                                }}>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Court ID</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Court ID\" value={this.state.caseDetails.courtId}\n                                                            onChange={this.handleCaseInputChange} name=\"courtId\" />\n\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Case Description</Form.Label>\n                                                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Case Description\" value={this.state.caseDetails.caseDescription}\n                                                            onChange={this.handleCaseInputChange} name=\"caseDescription\" />\n\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Start Date</Form.Label>\n                                                        <Form.Control type=\"date\" placeholder=\"Select Date\" value={this.state.caseDetails.startDateTime}\n                                                            onChange={this.handleCaseInputChange}\n                                                            name=\"startDateTime\" />\n\n                                                    </Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\" >Register Case</Button>\n\n                                                </Form>\n\n\n\n                                            </Card.Body>\n                                        </Card>\n                                        <br /><br />\n                                        <Card>\n                                            <Card.Header as=\"h2\">Submit Evidence</Card.Header>\n                                            <Card.Body>\n                                                <Card.Title>Provide the below details to submit an evidence.</Card.Title>\n\n                                                <Form onSubmit={(event) => {\n                                                    console.log('Form Submitted')\n                                                    event.preventDefault()\n\n                                                    this.uploadFile();\n\n                                                }}>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Case ID</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Case ID\" value={this.state.evidenceDetails.caseId}\n                                                            onChange={this.handleEvidenceInputChange}\n                                                            name=\"caseId\" />\n\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label >Upload Evidence File</Form.Label>\n                                                        <Form.Control type=\"file\" id=\"fname\"\n                                                            onChange={this.captureFile}\n                                                            name=\"fileHash\"\n                                                            placeholder=\"Enter the Hash\" />\n\n                                                    </Form.Group>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Date</Form.Label>\n                                                        <Form.Control type=\"date\" placeholder=\"Select Date\"\n                                                            name=\"createdDate\"\n                                                            id=\"dateofbirth\"\n                                                            value={this.state.evidenceDetails.createdDate}\n                                                            onChange={this.handleEvidenceInputChange} />\n\n                                                    </Form.Group>\n\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Evidence Description</Form.Label>\n                                                        <Form.Control as=\"textarea\" rows={3} placeholder=\"Evidence Description\"\n                                                            value={this.state.evidenceDetails.description}\n                                                            onChange={this.handleEvidenceInputChange} name=\"description\" />\n\n                                                    </Form.Group>\n\n                                                    <Button variant=\"primary\" type=\"submit\" >Submit Evidence</Button>\n\n                                                </Form>\n\n\n\n                                            </Card.Body>\n                                        </Card>\n                                        <br /><br />\n                                        <Card>\n                                            <Card.Header as=\"h2\">Get Evidences of a case</Card.Header>\n                                            <Card.Body>\n\n                                                <Form onSubmit={(event) => {\n                                                    console.log('Form Submitted')\n                                                    event.preventDefault()\n\n                                                    this.getEvidencesOfCase();\n\n                                                }}>\n                                                    <Form.Group className=\"mb-3\">\n                                                        <Form.Label>Case ID</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Case ID\" value={this.state.getCaseId}\n                                                            onChange={this.handleEvidenceCaseInput}\n                                                            name=\"caseId\" />\n\n                                                    </Form.Group>\n\n\n                                                    <Button variant=\"primary\" type=\"submit\" >Get Evidences</Button>\n\n                                                </Form>\n\n\n\n                                            </Card.Body>\n                                        </Card>\n                                        {this.state.evidences.length > 0 ? this.state.evidences.map((evidence, key) => {\n                                            return (\n                                                <div className=\"card mb-4\" key={key} >\n\n                                                    <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                                                        <li className=\"list-group-item\">\n                                                            <p className=\"text-center\"><img src={`https://ipfs.infura.io/ipfs/${evidence[1]}`} style={{ maxWidth: '420px' }} /></p>\n                                                            <p>Evidence Description: {evidence[0]}</p>\n                                                            <p>Date: {evidence[2]}</p>\n                                                            <button\n                                                                className=\"btn btn-link btn-sm float-right pt-0\"\n                                                                name={key}\n                                                                onClick={(event) => {\n                                                                    let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n\n                                                                    this.tipEvidenceOwner(evidence[3], tipAmount)\n                                                                }}\n                                                            >\n                                                                TIP 0.1 MATIC\n                                                            </button>\n                                                        </li>\n\n                                                    </ul>\n                                                </div>\n                                            )\n                                        }) : <p></p>}\n\n                                        <p>&nbsp;</p>\n\n                                    </div>\n                                </main>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n         \n         Shield X\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;"],"sourceRoot":""}